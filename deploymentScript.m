projectRoot = "C:\Users\Tyler\Documents\MATLAB\Personal Fun Stuff\Cascadia";

% Create target build options object, set build properties and build.
buildOpts = compiler.build.StandaloneApplicationOptions(fullfile(projectRoot, "Game UI", "CascadiaGUI.mlapp"));
buildOpts.AdditionalFiles = [fullfile(projectRoot, "Game Core", "DualTerrainTileWildlife.xlsx"),...
    fullfile(projectRoot, "Game Core", "Scoring", "BearRules.m"),...
    fullfile(projectRoot, "Game Core", "Scoring", "ElkRules.m"),...
    fullfile(projectRoot, "Game Core", "Scoring", "FamilyVariantRule.m"),...
    fullfile(projectRoot, "Game Core", "Scoring", "FoxRules.m"),...
    fullfile(projectRoot, "Game Core", "Scoring", "GroupShape.m"),...
    fullfile(projectRoot, "Game Core", "Scoring", "HawkRules.m"),...
    fullfile(projectRoot, "Game Core", "Scoring", "IntermediateVariantRule.m"),...
    fullfile(projectRoot, "Game Core", "Scoring", "SalmonRules.m"),...
    fullfile(projectRoot, "Game Core", "Scoring", "WildlifeScoreObjective.m"),...
    fullfile(projectRoot, "Game Core", "Scoring", "calculateAllScores.m"),...
    fullfile(projectRoot, "Game UI", "Images", "BearRuleA.png"),...
    fullfile(projectRoot, "Game UI", "Images", "BearRuleB.png"),...
    fullfile(projectRoot, "Game UI", "Images", "BearRuleC.png"),...
    fullfile(projectRoot, "Game UI", "Images", "BearRuleD.png"),...
    fullfile(projectRoot, "Game UI", "Images", "ElkRuleA.png"),...
    fullfile(projectRoot, "Game UI", "Images", "ElkRuleB.png"),...
    fullfile(projectRoot, "Game UI", "Images", "ElkRuleC.png"),...
    fullfile(projectRoot, "Game UI", "Images", "ElkRuleD.png"),...
    fullfile(projectRoot, "Game UI", "Images", "FamilyVariant.png"),...
    fullfile(projectRoot, "Game UI", "Images", "FoxRuleA.png"),...
    fullfile(projectRoot, "Game UI", "Images", "FoxRuleB.png"),...
    fullfile(projectRoot, "Game UI", "Images", "FoxRuleC.png"),...
    fullfile(projectRoot, "Game UI", "Images", "FoxRuleD.png"),...
    fullfile(projectRoot, "Game UI", "Images", "HawkRuleA.png"),...
    fullfile(projectRoot, "Game UI", "Images", "HawkRuleB.png"),...
    fullfile(projectRoot, "Game UI", "Images", "HawkRuleC.png"),...
    fullfile(projectRoot, "Game UI", "Images", "HawkRuleD.png"),...
    fullfile(projectRoot, "Game UI", "Images", "HexIcon.png"),...
    fullfile(projectRoot, "Game UI", "Images", "IntermediateVariant.jpg"),...
    fullfile(projectRoot, "Game UI", "Images", "SalmonRuleA.png"),...
    fullfile(projectRoot, "Game UI", "Images", "SalmonRuleB.png"),...
    fullfile(projectRoot, "Game UI", "Images", "SalmonRuleC.png"),...
    fullfile(projectRoot, "Game UI", "Images", "SalmonRuleD.png")];
buildOpts.AutoDetectDataFiles = true;
buildOpts.OutputDir = fullfile(projectRoot, "Deployment", "build");
buildOpts.ObfuscateArchive = false;
buildOpts.Verbose = true;
buildOpts.EmbedArchive = true;
buildOpts.ExecutableIcon = fullfile(projectRoot, "Game UI", "Images", "HexIcon.png");
buildOpts.ExecutableName = "Cascadia";
buildOpts.ExecutableVersion = "1.1";
buildOpts.TreatInputsAsNumeric = false;
buildResult = compiler.build.standaloneWindowsApplication(buildOpts);


% Create package options object, set package properties and package.
packageOpts = compiler.package.InstallerOptions(buildResult);
packageOpts.ApplicationName = "Cascadia";
packageOpts.AuthorName = "Tyler Mahlmann";
packageOpts.InstallerName = "CascadiaInstaller";
packageOpts.OutputDir = fullfile(projectRoot, "Deployment", "package");
packageOpts.Verbose = true;
packageOpts.Version = buildOpts.ExecutableVersion;
compiler.package.installer(buildResult, "Options", packageOpts);